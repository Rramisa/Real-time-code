{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultCache from './cache';\nimport { defaultColors, defaultInitials } from './utils';\nconst defaults = {\n  cache: defaultCache,\n  colors: defaultColors,\n  initials: defaultInitials,\n  avatarRedirectUrl: null\n};\nconst contextKeys = Object.keys(defaults);\n\n/**\n * withConfig and ConfigProvider provide a compatibility layer for different\n * versions of React equiped with different versions of the Context API.\n *\n * If the new Context API is available it will be used, otherwise we will\n * fall back to the legacy context api.\n */\n\nconst ConfigContext = React.createContext && /*#__PURE__*/React.createContext();\nconst isLegacyContext = !ConfigContext;\nconst ConfigConsumer = isLegacyContext ? null : ConfigContext.Consumer;\n\n/**\n * This was introduced in React 16.3.0 we need this to\n * prevent errors in newer versions. But we will just forward the\n * component for any version lower than 16.3.0\n *\n * https://github.com/Sitebase/react-avatar/issues/201\n * https://github.com/facebook/react/blob/master/CHANGELOG.md#1630-march-29-2018\n */\nconst forwardRef = React.forwardRef || (C => C);\nexport class ConfigProvider extends React.Component {\n  _getContext() {\n    const context = {};\n    contextKeys.forEach(key => {\n      if (typeof this.props[key] !== 'undefined') context[key] = this.props[key];\n    });\n    return context;\n  }\n  render() {\n    const {\n      children\n    } = this.props;\n    if (isLegacyContext) return React.Children.only(children);\n    return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n      value: this._getContext()\n    }, React.Children.only(children));\n  }\n}\n_defineProperty(ConfigProvider, \"displayName\", 'ConfigProvider');\n_defineProperty(ConfigProvider, \"propTypes\", {\n  cache: PropTypes.object,\n  colors: PropTypes.arrayOf(PropTypes.string),\n  initials: PropTypes.func,\n  avatarRedirectUrl: PropTypes.string,\n  children: PropTypes.node\n});\nexport const withConfig = Component => {\n  function withAvatarConfig(props, refOrContext) {\n    // If legacy context is enabled, there is no support for forwardedRefs either\n    if (isLegacyContext) {\n      const ctx = refOrContext && refOrContext.reactAvatar;\n      return /*#__PURE__*/React.createElement(Component, _extends({}, defaults, ctx, props));\n    }\n\n    /* eslint-disable react/display-name */\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, config => /*#__PURE__*/React.createElement(Component, _extends({\n      ref: refOrContext\n    }, defaults, config, props)));\n    /* eslint-enable react/display-name */\n  }\n\n  // Legacy support, only set when legacy is detected\n  withAvatarConfig.contextTypes = ConfigProvider.childContextTypes;\n  return forwardRef(withAvatarConfig);\n};\nif (isLegacyContext) {\n  ConfigProvider.childContextTypes = {\n    reactAvatar: PropTypes.object\n  };\n  ConfigProvider.prototype.getChildContext = function () {\n    return {\n      reactAvatar: this._getContext()\n    };\n  };\n}","map":{"version":3,"names":["_extends","_defineProperty","React","PropTypes","defaultCache","defaultColors","defaultInitials","defaults","cache","colors","initials","avatarRedirectUrl","contextKeys","Object","keys","ConfigContext","createContext","isLegacyContext","ConfigConsumer","Consumer","forwardRef","C","ConfigProvider","Component","_getContext","context","forEach","key","props","render","children","Children","only","createElement","Provider","value","object","arrayOf","string","func","node","withConfig","withAvatarConfig","refOrContext","ctx","reactAvatar","config","ref","contextTypes","childContextTypes","prototype","getChildContext"],"sources":["/Users/sumonta/Downloads/CSE471_Group8-main/frontend/node_modules/react-avatar/es/context.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultCache from './cache';\nimport { defaultColors, defaultInitials } from './utils';\nconst defaults = {\n  cache: defaultCache,\n  colors: defaultColors,\n  initials: defaultInitials,\n  avatarRedirectUrl: null\n};\nconst contextKeys = Object.keys(defaults);\n\n/**\n * withConfig and ConfigProvider provide a compatibility layer for different\n * versions of React equiped with different versions of the Context API.\n *\n * If the new Context API is available it will be used, otherwise we will\n * fall back to the legacy context api.\n */\n\nconst ConfigContext = React.createContext && /*#__PURE__*/React.createContext();\nconst isLegacyContext = !ConfigContext;\nconst ConfigConsumer = isLegacyContext ? null : ConfigContext.Consumer;\n\n/**\n * This was introduced in React 16.3.0 we need this to\n * prevent errors in newer versions. But we will just forward the\n * component for any version lower than 16.3.0\n *\n * https://github.com/Sitebase/react-avatar/issues/201\n * https://github.com/facebook/react/blob/master/CHANGELOG.md#1630-march-29-2018\n */\nconst forwardRef = React.forwardRef || (C => C);\nexport class ConfigProvider extends React.Component {\n  _getContext() {\n    const context = {};\n    contextKeys.forEach(key => {\n      if (typeof this.props[key] !== 'undefined') context[key] = this.props[key];\n    });\n    return context;\n  }\n  render() {\n    const {\n      children\n    } = this.props;\n    if (isLegacyContext) return React.Children.only(children);\n    return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n      value: this._getContext()\n    }, React.Children.only(children));\n  }\n}\n_defineProperty(ConfigProvider, \"displayName\", 'ConfigProvider');\n_defineProperty(ConfigProvider, \"propTypes\", {\n  cache: PropTypes.object,\n  colors: PropTypes.arrayOf(PropTypes.string),\n  initials: PropTypes.func,\n  avatarRedirectUrl: PropTypes.string,\n  children: PropTypes.node\n});\nexport const withConfig = Component => {\n  function withAvatarConfig(props, refOrContext) {\n    // If legacy context is enabled, there is no support for forwardedRefs either\n    if (isLegacyContext) {\n      const ctx = refOrContext && refOrContext.reactAvatar;\n      return /*#__PURE__*/React.createElement(Component, _extends({}, defaults, ctx, props));\n    }\n\n    /* eslint-disable react/display-name */\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, config => /*#__PURE__*/React.createElement(Component, _extends({\n      ref: refOrContext\n    }, defaults, config, props)));\n    /* eslint-enable react/display-name */\n  }\n\n  // Legacy support, only set when legacy is detected\n  withAvatarConfig.contextTypes = ConfigProvider.childContextTypes;\n  return forwardRef(withAvatarConfig);\n};\nif (isLegacyContext) {\n  ConfigProvider.childContextTypes = {\n    reactAvatar: PropTypes.object\n  };\n  ConfigProvider.prototype.getChildContext = function () {\n    return {\n      reactAvatar: this._getContext()\n    };\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}