{"ast":null,"code":"'use strict';\n\nimport retina from 'is-retina';\nconst IS_RETINA = retina();\nexport function fetch(url, successCb, errorCb) {\n  const request = new XMLHttpRequest();\n  request.onreadystatechange = function () {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        const data = JSON.parse(request.responseText);\n        successCb(data);\n      } else {\n        errorCb(request.status);\n      }\n    }\n  };\n  request.open('GET', url, true);\n  request.send();\n}\nexport function fetchJSONP(url, successCb, errorCb) {\n  const callbackName = 'jsonp_cb_' + Math.round(100000 * Math.random());\n  const script = document.createElement('script');\n  script.src = url + (url.indexOf('?') >= 0 ? '&' : '?') + 'callback=' + callbackName;\n  document.body.appendChild(script);\n  script.onerror = function () {\n    errorCb();\n  };\n  window[callbackName] = function (data) {\n    delete window[callbackName];\n    document.body.removeChild(script);\n    successCb(data);\n  };\n}\n\n// https://webaim.org/resources/contrastchecker/\nexport const defaultColors = ['#A62A21', '#7e3794', '#0B51C1', '#3A6024', '#A81563', '#B3003C'];\n\n// https://regex101.com/r/YEsPER/1\n// https://developer.mozilla.org/en-US/docs/Web/CSS/length\nconst reSize = /^([-+]?(?:\\d+(?:\\.\\d+)?|\\.\\d+))([a-z]{2,4}|%)?$/;\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator\nfunction _stringAsciiPRNG(value, m) {\n  // Xn+1 = (a * Xn + c) % m\n  // 0 < a < m\n  // 0 <= c < m\n  // 0 <= X0 < m\n\n  const charCodes = [...value].map(letter => letter.charCodeAt(0));\n  const len = charCodes.length;\n  const a = len % (m - 1) + 1;\n  const c = charCodes.reduce((current, next) => current + next) % m;\n  let random = charCodes[0] % m;\n  for (let i = 0; i < len; i++) random = (a * random + c) % m;\n  return random;\n}\nexport function getRandomColor(value) {\n  let colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultColors;\n  // if no value is passed, always return transparent color otherwise\n  // a rerender would show a new color which would will\n  // give strange effects when an interface is loading\n  // and gets rerendered a few consequent times\n  if (!value) return 'transparent';\n\n  // value based random color index\n  // the reason we don't just use a random number is to make sure that\n  // a certain value will always get the same color assigned given\n  // a fixed set of colors\n  const colorIndex = _stringAsciiPRNG(value, colors.length);\n  return colors[colorIndex];\n}\nexport function parseSize(size) {\n  size = '' + size;\n  const [, value = 0, unit = 'px'] = reSize.exec(size) || [];\n  return {\n    value: parseFloat(value),\n    str: value + unit,\n    unit\n  };\n}\n\n/**\n * Calculate absolute size in pixels we want for the images\n * that get requested from the various sources. They don't\n * understand relative sizes like `em` or `vww`.  We select\n * a fixed size of 512px when we can't detect the true pixel size.\n */\nexport function getImageSize(size) {\n  size = parseSize(size);\n  if (isNaN(size.value))\n    // invalid size, use fallback\n    size = 512;else if (size.unit === 'px')\n    // px are good, use them\n    size = size.value;else if (size.value === 0)\n    // relative 0 === absolute 0\n    size = 0;else\n    // anything else is unknown, use fallback\n    size = 512;\n  if (IS_RETINA) size = size * 2;\n  return size;\n}\nexport function defaultInitials(name, _ref) {\n  let {\n    maxInitials\n  } = _ref;\n  return name.split(/\\s/).map(part => part.substring(0, 1).toUpperCase()).filter(v => !!v).slice(0, maxInitials).join('').toUpperCase();\n}\n\n/**\n * Grouped timeouts reduce the amount of timeouts trigged\n * by grouping multiple handlers into a single setTimeout call.\n *\n * This reduces accuracy of the timeout but will be less expensive\n * when multiple avatar have been loaded into view.\n */\nconst timeoutGroups = {};\nexport function setGroupedTimeout(fn, ttl) {\n  if (timeoutGroups[ttl]) {\n    timeoutGroups[ttl].push(fn);\n    return;\n  }\n  const callbacks = timeoutGroups[ttl] = [fn];\n  setTimeout(() => {\n    delete timeoutGroups[ttl];\n    callbacks.forEach(cb => cb());\n  }, ttl);\n}\nexport function getNullableText() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  for (const arg of args) {\n    if (arg || arg === '') return arg;\n    if (arg === false || arg === null) return null;\n  }\n  return;\n}\nexport function calculateBorderRadius(round) {\n  if (round === true) return '100%';\n  if (round === false) return;\n  return round;\n}","map":{"version":3,"names":["retina","IS_RETINA","fetch","url","successCb","errorCb","request","XMLHttpRequest","onreadystatechange","readyState","status","data","JSON","parse","responseText","open","send","fetchJSONP","callbackName","Math","round","random","script","document","createElement","src","indexOf","body","appendChild","onerror","window","removeChild","defaultColors","reSize","_stringAsciiPRNG","value","m","charCodes","map","letter","charCodeAt","len","length","a","c","reduce","current","next","i","getRandomColor","colors","arguments","undefined","colorIndex","parseSize","size","unit","exec","parseFloat","str","getImageSize","isNaN","defaultInitials","name","_ref","maxInitials","split","part","substring","toUpperCase","filter","v","slice","join","timeoutGroups","setGroupedTimeout","fn","ttl","push","callbacks","setTimeout","forEach","cb","getNullableText","_len","args","Array","_key","arg","calculateBorderRadius"],"sources":["/Users/sumonta/Downloads/CSE471_Group8-main/frontend/node_modules/react-avatar/es/utils.js"],"sourcesContent":["'use strict';\n\nimport retina from 'is-retina';\nconst IS_RETINA = retina();\nexport function fetch(url, successCb, errorCb) {\n  const request = new XMLHttpRequest();\n  request.onreadystatechange = function () {\n    if (request.readyState === 4) {\n      if (request.status === 200) {\n        const data = JSON.parse(request.responseText);\n        successCb(data);\n      } else {\n        errorCb(request.status);\n      }\n    }\n  };\n  request.open('GET', url, true);\n  request.send();\n}\nexport function fetchJSONP(url, successCb, errorCb) {\n  const callbackName = 'jsonp_cb_' + Math.round(100000 * Math.random());\n  const script = document.createElement('script');\n  script.src = url + (url.indexOf('?') >= 0 ? '&' : '?') + 'callback=' + callbackName;\n  document.body.appendChild(script);\n  script.onerror = function () {\n    errorCb();\n  };\n  window[callbackName] = function (data) {\n    delete window[callbackName];\n    document.body.removeChild(script);\n    successCb(data);\n  };\n}\n\n// https://webaim.org/resources/contrastchecker/\nexport const defaultColors = ['#A62A21', '#7e3794', '#0B51C1', '#3A6024', '#A81563', '#B3003C'];\n\n// https://regex101.com/r/YEsPER/1\n// https://developer.mozilla.org/en-US/docs/Web/CSS/length\nconst reSize = /^([-+]?(?:\\d+(?:\\.\\d+)?|\\.\\d+))([a-z]{2,4}|%)?$/;\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator\nfunction _stringAsciiPRNG(value, m) {\n  // Xn+1 = (a * Xn + c) % m\n  // 0 < a < m\n  // 0 <= c < m\n  // 0 <= X0 < m\n\n  const charCodes = [...value].map(letter => letter.charCodeAt(0));\n  const len = charCodes.length;\n  const a = len % (m - 1) + 1;\n  const c = charCodes.reduce((current, next) => current + next) % m;\n  let random = charCodes[0] % m;\n  for (let i = 0; i < len; i++) random = (a * random + c) % m;\n  return random;\n}\nexport function getRandomColor(value) {\n  let colors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultColors;\n  // if no value is passed, always return transparent color otherwise\n  // a rerender would show a new color which would will\n  // give strange effects when an interface is loading\n  // and gets rerendered a few consequent times\n  if (!value) return 'transparent';\n\n  // value based random color index\n  // the reason we don't just use a random number is to make sure that\n  // a certain value will always get the same color assigned given\n  // a fixed set of colors\n  const colorIndex = _stringAsciiPRNG(value, colors.length);\n  return colors[colorIndex];\n}\nexport function parseSize(size) {\n  size = '' + size;\n  const [, value = 0, unit = 'px'] = reSize.exec(size) || [];\n  return {\n    value: parseFloat(value),\n    str: value + unit,\n    unit\n  };\n}\n\n/**\n * Calculate absolute size in pixels we want for the images\n * that get requested from the various sources. They don't\n * understand relative sizes like `em` or `vww`.  We select\n * a fixed size of 512px when we can't detect the true pixel size.\n */\nexport function getImageSize(size) {\n  size = parseSize(size);\n  if (isNaN(size.value))\n    // invalid size, use fallback\n    size = 512;else if (size.unit === 'px')\n    // px are good, use them\n    size = size.value;else if (size.value === 0)\n    // relative 0 === absolute 0\n    size = 0;else\n    // anything else is unknown, use fallback\n    size = 512;\n  if (IS_RETINA) size = size * 2;\n  return size;\n}\nexport function defaultInitials(name, _ref) {\n  let {\n    maxInitials\n  } = _ref;\n  return name.split(/\\s/).map(part => part.substring(0, 1).toUpperCase()).filter(v => !!v).slice(0, maxInitials).join('').toUpperCase();\n}\n\n/**\n * Grouped timeouts reduce the amount of timeouts trigged\n * by grouping multiple handlers into a single setTimeout call.\n *\n * This reduces accuracy of the timeout but will be less expensive\n * when multiple avatar have been loaded into view.\n */\nconst timeoutGroups = {};\nexport function setGroupedTimeout(fn, ttl) {\n  if (timeoutGroups[ttl]) {\n    timeoutGroups[ttl].push(fn);\n    return;\n  }\n  const callbacks = timeoutGroups[ttl] = [fn];\n  setTimeout(() => {\n    delete timeoutGroups[ttl];\n    callbacks.forEach(cb => cb());\n  }, ttl);\n}\nexport function getNullableText() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  for (const arg of args) {\n    if (arg || arg === '') return arg;\n    if (arg === false || arg === null) return null;\n  }\n  return;\n}\nexport function calculateBorderRadius(round) {\n  if (round === true) return '100%';\n  if (round === false) return;\n  return round;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}